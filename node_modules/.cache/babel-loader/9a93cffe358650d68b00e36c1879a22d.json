{"ast":null,"code":"import _slicedToArray from \"/Users/anthonyzachry/Desktop/UCLA/Classes/TEST/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/anthonyzachry/Desktop/UCLA/Classes/TEST/src/pages/Search/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Container from \"../../components/Container\";\nimport SearchForm from \"../../components/SearchForm\";\nimport SearchResults from \"../../components/SearchResults\";\nimport Alert from \"../../components/Alert\";\nimport API from \"../../utils/API\";\nimport WikipediaContext from \"../../utils/WikipediaContext\";\n\nfunction Search() {\n  const _useState = useState(\"Wikipedia\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        search = _useState2[0],\n        setSearch = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        error = _useState4[0],\n        setError = _useState4[1];\n\n  const _useState5 = useState({\n    title: \"\",\n    description: \"\",\n    url: \"\"\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        wikiResults = _useState6[0],\n        setWikiResults = _useState6[1]; // const [title, setTitle] = useState(\"\");\n  // const [description, setDescription] = useState(\"\");\n  // const [url, setUrl] = useState(\"\");\n  // When the component mounts, update the title to be Wikipedia Searcher\n\n\n  useEffect(() => {\n    document.title = \"Wikipedia Searcher\";\n\n    if (!search) {\n      return;\n    }\n\n    API.searchTerms(search).then(res => {\n      if (res.data.length === 0) {\n        throw new Error(\"No results found.\");\n      }\n\n      if (res.data.status === \"error\") {\n        throw new Error(res.data.message);\n      }\n\n      setWikiResults({\n        title: res.data[1],\n        description: res.data[2][0],\n        url: res.data[3][0]\n      });\n    }).catch(err => setError(err));\n  }, [search]);\n\n  const handleInputChange = event => {\n    setSearch(event.target.value);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Container, {\n    style: {\n      minHeight: \"100vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Search For Anything on Wikipedia\"), React.createElement(Alert, {\n    type: \"danger\",\n    style: {\n      opacity: error ? 1 : 0,\n      marginBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, error), React.createElement(SearchForm, {\n    handleFormSubmit: handleFormSubmit,\n    handleInputChange: handleInputChange,\n    results: search,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(WikipediaContext.Provider, {\n    value: wikiResults,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(SearchResults, {\n    title: wikiResults.title,\n    description: wikiResults.description,\n    url: wikiResults.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(WikipediaContext.Provider, {\n    value: wikiResults,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })));\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/anthonyzachry/Desktop/UCLA/Classes/TEST/src/pages/Search/index.js"],"names":["React","useState","useEffect","Container","SearchForm","SearchResults","Alert","API","WikipediaContext","Search","search","setSearch","error","setError","title","description","url","wikiResults","setWikiResults","document","searchTerms","then","res","data","length","Error","status","message","catch","err","handleInputChange","event","target","value","handleFormSubmit","preventDefault","minHeight","opacity","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Container from \"../../components/Container\";\nimport SearchForm from \"../../components/SearchForm\";\nimport SearchResults from \"../../components/SearchResults\";\nimport Alert from \"../../components/Alert\";\nimport API from \"../../utils/API\";\nimport WikipediaContext from \"../../utils/WikipediaContext\";\n\nfunction Search() {\n  const [search, setSearch] = useState(\"Wikipedia\");\n  const [error, setError] = useState(\"\");\n\n  const [wikiResults, setWikiResults] = useState({\n    title: \"\",\n    description: \"\",\n    url: \"\"\n  });\n\n  // const [title, setTitle] = useState(\"\");\n  // const [description, setDescription] = useState(\"\");\n  // const [url, setUrl] = useState(\"\");\n\n  // When the component mounts, update the title to be Wikipedia Searcher\n  useEffect(() => {\n    document.title = \"Wikipedia Searcher\";\n\n    if (!search) {\n      return;\n    }\n\n    API.searchTerms(search)\n      .then(res => {\n        if (res.data.length === 0) {\n          throw new Error(\"No results found.\");\n        }\n        if (res.data.status === \"error\") {\n          throw new Error(res.data.message);\n        }\n        setWikiResults({\n          title: res.data[1],\n          description: res.data[2][0],\n          url: res.data[3][0]\n        })\n      })\n      .catch(err => setError(err));\n  }, [search]);\n\n  const handleInputChange = event => {\n    setSearch(event.target.value);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n  };\n  return (\n    <div>\n      <Container style={{ minHeight: \"100vh\" }}>\n        <h1 className=\"text-center\">Search For Anything on Wikipedia</h1>\n        <Alert type=\"danger\" style={{ opacity: error ? 1 : 0, marginBottom: 10 }}>\n          {error}\n        </Alert>\n        <SearchForm\n          handleFormSubmit={handleFormSubmit}\n          handleInputChange={handleInputChange}\n          results={search}\n        />\n        <WikipediaContext.Provider value={wikiResults} />\n        <SearchResults title={wikiResults.title} description={wikiResults.description} url={wikiResults.url} />\n        <WikipediaContext.Provider value={wikiResults} />\n      </Container>\n    </div>\n  );\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}