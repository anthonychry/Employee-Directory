{"ast":null,"code":"import _slicedToArray from \"/Users/anthonyzachry/Desktop/UCLA/Classes/TEST/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/anthonyzachry/Desktop/UCLA/Classes/TEST/src/pages/Search/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Container from \"../../components/Container\";\nimport SearchForm from \"../../components/SearchForm\";\nimport SearchResults from \"../../components/SearchResults\";\nimport Alert from \"../../components/Alert\";\nimport API from \"../../utils/API\";\n\nfunction Search() {\n  const _useState = useState(\"Wikipedia\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        search = _useState2[0],\n        setSearch = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        error = _useState4[0],\n        setError = _useState4[1];\n\n  const _useState5 = useState({\n    search: \"Wikipedia\",\n    error: \"\"\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        wikiSearch = _useState6[0],\n        setWikiSearch = _useState6[1];\n\n  const _useState7 = useState({\n    title: \"\",\n    description: \"\",\n    url: \"\"\n  }),\n        _useState8 = _slicedToArray(_useState7, 2),\n        wikiResults = _useState8[0],\n        setWikiResults = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        title = _useState10[0],\n        setTitle = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        description = _useState12[0],\n        setDescription = _useState12[1];\n\n  const _useState13 = useState(\"\"),\n        _useState14 = _slicedToArray(_useState13, 2),\n        url = _useState14[0],\n        setUrl = _useState14[1]; // When the component mounts, update the title to be Wikipedia Searcher\n\n\n  useEffect(() => {\n    document.title = \"Wikipedia Searcher\";\n\n    if (!search) {\n      return;\n    }\n\n    API.searchTerms(search).then(res => {\n      if (res.data.length === 0) {\n        throw new Error(\"No results found.\");\n      }\n\n      if (res.data.status === \"error\") {\n        throw new Error(res.data.message);\n      }\n\n      setTitle(res.data[1]);\n      setDescription(res.data[2][0]);\n      setUrl(res.data[3][0]);\n    }).catch(err => setError(err));\n  }, [search]);\n\n  const handleInputChange = event => {\n    setSearch(event.target.value);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Container, {\n    style: {\n      minHeight: \"100vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Search For Anything on Wikipedia\"), React.createElement(Alert, {\n    type: \"danger\",\n    style: {\n      opacity: error ? 1 : 0,\n      marginBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, error), React.createElement(SearchForm, {\n    handleFormSubmit: handleFormSubmit,\n    handleInputChange: handleInputChange,\n    results: search,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(SearchResults, {\n    title: wikiResults.title,\n    description: wikiResults.description,\n    url: wikiResults.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })));\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/anthonyzachry/Desktop/UCLA/Classes/TEST/src/pages/Search/index.js"],"names":["React","useState","useEffect","Container","SearchForm","SearchResults","Alert","API","Search","search","setSearch","error","setError","wikiSearch","setWikiSearch","title","description","url","wikiResults","setWikiResults","setTitle","setDescription","setUrl","document","searchTerms","then","res","data","length","Error","status","message","catch","err","handleInputChange","event","target","value","handleFormSubmit","preventDefault","minHeight","opacity","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Container from \"../../components/Container\";\nimport SearchForm from \"../../components/SearchForm\";\nimport SearchResults from \"../../components/SearchResults\";\nimport Alert from \"../../components/Alert\";\nimport API from \"../../utils/API\";\n\nfunction Search() {\n  const [search, setSearch] = useState(\"Wikipedia\");\n  const [error, setError] = useState(\"\");\n\n  const [wikiSearch, setWikiSearch] = useState({\n    search: \"Wikipedia\",\n    error: \"\"\n  });\n\n  const [wikiResults, setWikiResults] = useState({\n    title: \"\",\n    description: \"\",\n    url: \"\"\n  });\n\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n\n  // When the component mounts, update the title to be Wikipedia Searcher\n  useEffect(() => {\n    document.title = \"Wikipedia Searcher\";\n\n    if (!search) {\n      return;\n    }\n\n    API.searchTerms(search)\n      .then(res => {\n        if (res.data.length === 0) {\n          throw new Error(\"No results found.\");\n        }\n        if (res.data.status === \"error\") {\n          throw new Error(res.data.message);\n        }\n        setTitle(res.data[1]);\n        setDescription(res.data[2][0]);\n        setUrl(res.data[3][0]);\n      })\n      .catch(err => setError(err));\n  }, [search]);\n\n  const handleInputChange = event => {\n    setSearch(event.target.value);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n  };\n  return (\n    <div>\n      <Container style={{ minHeight: \"100vh\" }}>\n        <h1 className=\"text-center\">Search For Anything on Wikipedia</h1>\n        <Alert type=\"danger\" style={{ opacity: error ? 1 : 0, marginBottom: 10 }}>\n          {error}\n        </Alert>\n        <SearchForm\n          handleFormSubmit={handleFormSubmit}\n          handleInputChange={handleInputChange}\n          results={search}\n        />\n        <SearchResults title={wikiResults.title} description={wikiResults.description} url={wikiResults.url} />\n      </Container>\n    </div>\n  );\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}